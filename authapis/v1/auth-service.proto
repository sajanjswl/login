syntax="proto3";
package v1;


 option go_package = "github.com/sajanjswl/auth/gen/go/auth/v1";

import "google/api/annotations.proto";

import "protoc-gen-openapiv2/options/annotations.proto";

 option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "auth service";
		version: "1.0";
		
  };
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
	}
};

message User {
    string emailID=2;
    string password=3;
    string  Name =4;
    string mobileNumber=7;
}

message RegistrationRequest{
    string apiVersion =1;
    User user=2;

}
message RegistrationResponse {
    string message =1;
}

message UpdateUserRequest{
    string apiVersion =1;
    User user=2;

}
message UpdateUserResponse {
    string message =1;
}


message LoginRequest{
    string apiVersion= 1;
    string emailID=2;
    string password=3;
}
message LoginResponse{
    string status=1;
    string message=2;
}


message HomeRequest{
    string apiVersion=1;
}
message HomeResponse{
    string message=1;
}



service AuthService {
    rpc RegisterUser (RegistrationRequest) returns (RegistrationResponse){

        option (google.api.http) = {
            post: "/v1/register"
            body: "*"
        };
    }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){

        option (google.api.http) = {
            post: "/v1/update"
            body: "*"
        };
    }


    rpc LoginUser (LoginRequest) returns (LoginResponse){

        option (google.api.http) = {
            post: "/v1/login"
            body: "*"
        };
    }

    rpc Home(HomeRequest) returns (HomeResponse){

        option (google.api.http) = {
            get: "/v1/home"
        };
        

    }

}